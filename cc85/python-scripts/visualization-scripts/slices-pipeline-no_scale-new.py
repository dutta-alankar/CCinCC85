# script-version: 2.0
# Catalyst state generated using paraview version 5.11.0

#### import the simple module from the paraview
from paraview.simple import *
#### disable automatic camera reset on 'Show'
paraview.simple._DisableFirstRenderCameraReset()

# ----------------------------------------------------------------
# setup views used in the visualization
# ----------------------------------------------------------------

# get the material library
materialLibrary1 = GetMaterialLibrary()

# Create a new 'Render View'
renderView1 = CreateView('RenderView')
renderView1.ViewSize = [1540, 794]
renderView1.InteractionMode = '2D'
renderView1.AxesGrid = 'GridAxes3DActor'
renderView1.OrientationAxesInteractivity = 1
renderView1.CenterOfRotation = [134.88891220092773, 0.0, -0.2315988540649414]
renderView1.StereoType = 'Crystal Eyes'
renderView1.CameraPosition = [187.76398646289257, -60.47638825539121, 386.86523611289056]
renderView1.CameraFocalPoint = [187.76398646289257, -60.47638825539121, -0.2315988540649414]
renderView1.CameraFocalDisk = 1.0
renderView1.CameraParallelScale = 82.80002742839294
renderView1.BackEnd = 'OSPRay raycaster'
renderView1.OSPRayMaterialLibrary = materialLibrary1

SetActiveView(None)

# ----------------------------------------------------------------
# setup view layouts
# ----------------------------------------------------------------

# create new layout object 'Layout #1'
layout1 = CreateLayout(name='Layout #1')
layout1.AssignView(0, renderView1)
layout1.SetSize(1540, 794)

# ----------------------------------------------------------------
# restore active view
SetActiveView(renderView1)
# ----------------------------------------------------------------

# Hide orientation axes
renderView1.OrientationAxesVisibility = 0

# ----------------------------------------------------------------
# setup the data processing pipelines
# ----------------------------------------------------------------

# create a new 'XDMF Reader'
grid = XDMFReader(registrationName='grid')
grid.CellArrayStatus = ['X', 'Y', 'Z', 'density', 'mach', 'ndens', 'pressure', 'temperature', 'tr1', 'vphi', 'vr', 'vth']
grid.GridStatus = ['node_mesh']

# create a new 'Annotate Time Filter'
chi = None
with open("pluto.ini", "r") as ini_file:
    Lines = ini_file.readlines()
    for line in Lines[::-1]:
        if 'CHI' in line:
            _, chi = line.strip().split()
chi = float(chi)
annotateTimeFilter1 = AnnotateTimeFilter(registrationName='AnnotateTimeFilter1', Input=grid)
annotateTimeFilter1.Format = 'Time: {TEXT_time:.2f} $\\bf t_{{cc}}$'
annotateTimeFilter1.Scale = 1/(chi**0.5) #tcc 0.01564916333039798

# create a new 'Clip'
clip1 = Clip(registrationName='Clip1', Input=grid)
clip1.ClipType = 'Cylinder'
clip1.HyperTreeGridClipper = 'Plane'
clip1.Scalars = ['CELLS', 'X']
clip1.Value = 50.0

# init the 'Cylinder' selected for 'ClipType'
clip1.ClipType.Center = [135.0, 0.0, -0.9801521301269531]
clip1.ClipType.Axis = [1.0, 0.0, 0.0]
clip1.ClipType.Radius = 4.0

# init the 'Plane' selected for 'HyperTreeGridClipper'
clip1.HyperTreeGridClipper.Origin = [134.7293186187744, 0.0, -0.9801521301269531]

# create a new 'Transform'
transform4 = Transform(registrationName='Transform4', Input=clip1)
transform4.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform4.Transform.Translate = [0.0, -123.0, 0.0]

# create a new 'Transform'
transform3 = Transform(registrationName='Transform3', Input=clip1)
transform3.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform3.Transform.Translate = [0.0, -95.0, 0.0]

# create a new 'Slice'
slice5 = Slice(registrationName='Slice5', Input=transform3)
slice5.SliceType = 'Plane'
slice5.HyperTreeGridSlicer = 'Plane'
slice5.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
slice5.SliceType.Origin = [134.8285789489746, -115.0, 0.0]
slice5.SliceType.Normal = [0.0, 0.0, 1.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
slice5.HyperTreeGridSlicer.Origin = [134.8285789489746, -115.0, -0.9801521301269531]

# create a new 'Transform'
transform5 = Transform(registrationName='Transform5', Input=clip1)
transform5.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform5.Transform.Translate = [0.0, -3.0, 0.0]

# create a new 'Transform'
transform2 = Transform(registrationName='Transform2', Input=clip1)
transform2.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform2.Transform.Translate = [0.0, -65.0, 0.0]

# create a new 'Slice'
slice7 = Slice(registrationName='Slice7', Input=transform5)
slice7.SliceType = 'Plane'
slice7.HyperTreeGridSlicer = 'Plane'
slice7.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
slice7.SliceType.Origin = [184.8285789489746, -4.0000001192092896, 0.0]
slice7.SliceType.Normal = [0.0, 0.0, 1.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
slice7.HyperTreeGridSlicer.Origin = [184.8285789489746, -4.0000001192092896, -0.9801521301269531]

# create a new 'Calculator'
calculator1 = Calculator(registrationName='Calculator1', Input=transform2)
calculator1.AttributeType = 'Cell Data'
calculator1.ResultArrayName = 'p/kB'
calculator1.Function = 'pressure*((6.3682e-26*(5.4100e+07)^2)/1.3806505e-16)'

# create a new 'Slice'
slice4 = Slice(registrationName='Slice4', Input=calculator1)
slice4.SliceType = 'Plane'
slice4.HyperTreeGridSlicer = 'Plane'
slice4.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
slice4.SliceType.Origin = [134.8285789489746, -80.0, -0.9801521301269531]
slice4.SliceType.Normal = [0.0, 0.0, 1.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
slice4.HyperTreeGridSlicer.Origin = [134.8285789489746, -80.0, -0.9801521301269531]

# create a new 'Slice'
slice6 = Slice(registrationName='Slice6', Input=transform4)
slice6.SliceType = 'Plane'
slice6.HyperTreeGridSlicer = 'Plane'
slice6.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
slice6.SliceType.Origin = [134.8285789489746, -140.0, 0.0]
slice6.SliceType.Normal = [0.0, 0.0, 1.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
slice6.HyperTreeGridSlicer.Origin = [134.8285789489746, -140.0, -0.9801521301269531]

# create a new 'Transform'
transform1 = Transform(registrationName='Transform1', Input=clip1)
transform1.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform1.Transform.Translate = [0.0, -32.0, 0.0]

# create a new 'Slice'
slice2 = Slice(registrationName='Slice2', Input=transform1)
slice2.SliceType = 'Plane'
slice2.HyperTreeGridSlicer = 'Plane'
slice2.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
slice2.SliceType.Origin = [134.8285789489746, -50.0, 0.0]
slice2.SliceType.Normal = [0.0, 0.0, 1.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
slice2.HyperTreeGridSlicer.Origin = [134.8285789489746, -50.0, -0.9801521301269531]

# ----------------------------------------------------------------
# setup the visualization in view 'renderView1'
# ----------------------------------------------------------------

# show data from slice2
slice2Display = Show(slice2, renderView1, 'GeometryRepresentation')

# get color transfer function/color map for 'temperature'
temperatureLUT = GetColorTransferFunction('temperature')
temperatureLUT.TransferFunction2D = None
temperatureLUT.RGBPoints = [38227.921405185596, 0.001462, 0.000466, 0.013866, 38980.4717395625, 0.002267, 0.00127, 0.01857, 39747.6391213449, 0.003299, 0.002249, 0.024239, 40530.106438738796, 0.004547, 0.003392, 0.030909, 41327.7718915253, 0.006006, 0.004692, 0.038558, 42141.34551553608, 0.007676, 0.006136, 0.046836, 42970.7214635734, 0.009561, 0.007713, 0.055143, 43816.637998324935, 0.011663, 0.009417, 0.06346, 44679.20714581822, 0.013995, 0.011225, 0.071862, 45558.530274465294, 0.016561, 0.013136, 0.080282, 46455.39010705661, 0.019373, 0.015133, 0.088767, 47369.66996072856, 0.022447, 0.017199, 0.097327, 48302.18367473422, 0.025793, 0.019331, 0.10593, 49252.80992758455, 0.029432, 0.021503, 0.114621, 50222.39491200324, 0.033385, 0.023702, 0.123397, 51211.067031620754, 0.037668, 0.025921, 0.132232, 52218.94247436604, 0.042253, 0.028139, 0.141141, 53246.91839289353, 0.046915, 0.030324, 0.150164, 54294.86104593224, 0.051644, 0.032474, 0.159254, 55363.70325165878, 0.056449, 0.034569, 0.168414, 56453.305952034774, 0.06134, 0.03659, 0.177642, 57564.63904861056, 0.066331, 0.038504, 0.186962, 58697.849716937424, 0.071429, 0.040294, 0.196354, 59853.07113099478, 0.076637, 0.041905, 0.205799, 61031.33160233195, 0.081962, 0.043328, 0.215289, 62232.47783742316, 0.087411, 0.044556, 0.224813, 63457.57902744765, 0.09299, 0.045583, 0.234358, 64706.47578482906, 0.098702, 0.046402, 0.243904, 65980.27980551048, 0.104551, 0.047008, 0.25343, 67278.82536560154, 0.110536, 0.047399, 0.262912, 68603.26835554921, 0.116656, 0.047574, 0.272321, 69953.78417337532, 0.122908, 0.047536, 0.281624, 71330.53153058066, 0.129285, 0.047293, 0.290788, 72734.73592834681, 0.135778, 0.046856, 0.299776, 74166.21467749061, 0.142378, 0.046242, 0.308553, 75626.24199792549, 0.149073, 0.045468, 0.317085, 77114.62793781926, 0.15585, 0.044559, 0.325338, 78632.69737258805, 0.162689, 0.043554, 0.333277, 80180.65134250156, 0.169575, 0.042489, 0.340874, 81758.67176182872, 0.176493, 0.041402, 0.348111, 83368.16329343549, 0.183429, 0.040329, 0.354971, 85008.91653996227, 0.190367, 0.039309, 0.361447, 86682.39200542372, 0.197297, 0.0384, 0.367535, 88388.3719680506, 0.204209, 0.037632, 0.373238, 90128.37499292227, 0.211095, 0.03703, 0.378563, 91902.63151131538, 0.217949, 0.036615, 0.383522, 93711.35003238684, 0.224763, 0.036405, 0.388129, 95556.140573162, 0.231538, 0.036405, 0.3924, 97436.76312351308, 0.238273, 0.036621, 0.396353, 99354.89170528986, 0.244967, 0.037055, 0.400007, 101310.27676697093, 0.25162, 0.037705, 0.403378, 103304.65887968632, 0.258234, 0.038571, 0.406485, 105338.30216252654, 0.26481, 0.039647, 0.409345, 107411.44560756623, 0.271347, 0.040922, 0.411976, 109525.93460766434, 0.27785, 0.042353, 0.414392, 111681.49406450267, 0.284321, 0.043933, 0.416608, 113880.04273292575, 0.290763, 0.045644, 0.418637, 116121.2945783214, 0.297178, 0.04747, 0.420491, 118407.24463396137, 0.303568, 0.049396, 0.422182, 120738.1956317273, 0.309935, 0.051407, 0.423721, 123114.42150305031, 0.316282, 0.05349, 0.425116, 125538.03742730434, 0.32261, 0.055634, 0.426377, 128008.728088276, 0.328921, 0.057827, 0.427511, 130528.69275245274, 0.335217, 0.06006, 0.428524, 133097.60356849982, 0.3415, 0.062325, 0.429425, 135717.74723282814, 0.347771, 0.064616, 0.430217, 138389.4707350921, 0.354032, 0.066925, 0.430906, 141113.0880540262, 0.360284, 0.069247, 0.431497, 143891.02359685715, 0.366529, 0.071579, 0.431994, 146722.91594983643, 0.372768, 0.073915, 0.4324, 149611.28590038847, 0.379001, 0.076253, 0.432719, 152555.7576670759, 0.385228, 0.078591, 0.432955, 155558.95224903154, 0.391453, 0.080927, 0.433109, 158621.26736393172, 0.397674, 0.083257, 0.433183, 161743.06289251434, 0.403894, 0.08558, 0.433179, 164927.1176773079, 0.410113, 0.087896, 0.433098, 168173.01746781767, 0.416331, 0.090203, 0.432943, 171483.6515770374, 0.422549, 0.092501, 0.432714, 174858.5892863038, 0.428768, 0.09479, 0.432412, 178300.8347707321, 0.434987, 0.097069, 0.432039, 181809.9401888138, 0.441207, 0.099338, 0.431594, 185389.02914402905, 0.447428, 0.101597, 0.43108, 189038.57562063157, 0.453651, 0.103848, 0.430498, 192759.00851030246, 0.459875, 0.106089, 0.429846, 196553.6395280619, 0.4661, 0.108322, 0.429125, 200421.97498649365, 0.472328, 0.110547, 0.428334, 204367.45825496412, 0.478558, 0.112764, 0.427475, 208389.57601994387, 0.484789, 0.114974, 0.426548, 212491.9085389491, 0.491022, 0.117179, 0.425552, 216674.9990901833, 0.497257, 0.119379, 0.424488, 220939.33926698554, 0.503493, 0.121575, 0.423356, 225288.72493930793, 0.50973, 0.123769, 0.422156, 229722.59024528807, 0.515967, 0.12596, 0.420887, 234244.88195638193, 0.522206, 0.12815, 0.419549, 238855.0117153817, 0.528444, 0.130341, 0.418142, 243557.08319420464, 0.534683, 0.132534, 0.416667, 248351.7190954069, 0.54092, 0.134729, 0.415123, 253239.48288063094, 0.547157, 0.136929, 0.413511, 258224.72535560894, 0.553392, 0.139134, 0.411829, 263306.7979325163, 0.559624, 0.141346, 0.410078, 268490.2243795778, 0.565854, 0.143567, 0.408258, 273774.3303249247, 0.572081, 0.145797, 0.406369, 279163.8193752471, 0.578304, 0.148039, 0.404411, 284659.40526886773, 0.584521, 0.150294, 0.402385, 290261.7338424907, 0.590734, 0.152563, 0.40029, 295975.791966256, 0.59694, 0.154848, 0.398125, 301800.8362322871, 0.603139, 0.157151, 0.395891, 307742.0517594025, 0.60933, 0.159474, 0.393589, 313798.6655861918, 0.615513, 0.161817, 0.391219, 319976.06896135624, 0.621685, 0.164184, 0.388781, 326275.0799679241, 0.627847, 0.166575, 0.386276, 332696.43886045367, 0.633998, 0.168992, 0.383704, 339245.86156268953, 0.640135, 0.171438, 0.381065, 345922.4959845203, 0.64626, 0.173914, 0.378359, 352732.2852812601, 0.652369, 0.176421, 0.375586, 359674.34348869586, 0.658463, 0.178962, 0.372748, 366754.8500271051, 0.66454, 0.181539, 0.369846, 373974.7425788567, 0.670599, 0.184153, 0.366879, 381334.86961974594, 0.676638, 0.186807, 0.363849, 388841.78271084017, 0.682656, 0.189501, 0.360757, 396494.5051910332, 0.688653, 0.192239, 0.357603, 404299.849072995, 0.694627, 0.195021, 0.354388, 412256.7988693094, 0.700576, 0.197851, 0.351113, 420372.43739827647, 0.7065, 0.200728, 0.347777, 428647.8394263866, 0.712396, 0.203656, 0.344383, 437083.97747203446, 0.718264, 0.206636, 0.340931, 445688.3608992932, 0.724103, 0.20967, 0.337424, 454459.8702644561, 0.729909, 0.212759, 0.333861, 463406.31345982087, 0.735683, 0.215906, 0.330245, 472526.5265391713, 0.741423, 0.219112, 0.326576, 481828.62779076514, 0.747127, 0.222378, 0.322856, 491311.40699671523, 0.752794, 0.225706, 0.319085, 500983.3051807585, 0.758422, 0.229097, 0.315266, 510845.6032072445, 0.76401, 0.232554, 0.311399, 520899.460085272, 0.769556, 0.236077, 0.307485, 531153.825179021, 0.775059, 0.239667, 0.303526, 541607.3643795918, 0.780517, 0.243327, 0.299523, 552269.3828253439, 0.785929, 0.247056, 0.295477, 563138.4933710404, 0.791293, 0.250856, 0.29139, 574224.3710727089, 0.796607, 0.254728, 0.287264, 585528.4840501806, 0.801871, 0.258674, 0.283099, 597052.1607534538, 0.807082, 0.262692, 0.278898, 608805.6588956381, 0.812239, 0.266786, 0.274661, 620787.4493282882, 0.817341, 0.270954, 0.27039, 633008.1975509634, 0.822386, 0.275197, 0.266085, 645466.3136252513, 0.827372, 0.279517, 0.26175, 658172.887048357, 0.832299, 0.283913, 0.257383, 671129.6005713388, 0.837165, 0.288385, 0.252988, 684337.9768564423, 0.841969, 0.292933, 0.248564, 697809.773239289, 0.846709, 0.297559, 0.244113, 711543.237018149, 0.851384, 0.30226, 0.239636, 725550.5929312799, 0.855992, 0.307038, 0.235133, 739830.0185998214, 0.860533, 0.311892, 0.230606, 754394.22474585, 0.865006, 0.316822, 0.226055, 769245.1401295852, 0.869409, 0.321827, 0.221482, 784384.5100183056, 0.873741, 0.326906, 0.216886, 799825.8106068923, 0.878001, 0.33206, 0.212268, 815567.032958045, 0.882188, 0.337287, 0.207628, 831622.1890010318, 0.886302, 0.342586, 0.202968, 847989.1899350034, 0.890341, 0.347957, 0.198286, 864682.6047212705, 0.894305, 0.353399, 0.193584, 881704.6440944239, 0.898192, 0.358911, 0.18886, 899057.3084704373, 0.902003, 0.364492, 0.184116, 916756.0441914343, 0.905735, 0.37014, 0.17935, 934798.5486242817, 0.90939, 0.375856, 0.174563, 953200.8821669789, 0.912966, 0.381636, 0.169755, 971960.6506472187, 0.916462, 0.387481, 0.164924, 991094.552930131, 0.919879, 0.393389, 0.16007, 1010605.1229478228, 0.923215, 0.399359, 0.155193, 1030494.6535663271, 0.92647, 0.405389, 0.150292, 1050780.8492999447, 0.929644, 0.411479, 0.145367, 1071461.0708829577, 0.932737, 0.417627, 0.140417, 1092553.7266572113, 0.935747, 0.423831, 0.13544, 1114056.0724352777, 0.938675, 0.430091, 0.130438, 1135987.248366595, 0.941521, 0.436405, 0.125409, 1158350.1588305214, 0.944285, 0.442772, 0.120354, 1181147.431897777, 0.946965, 0.449191, 0.115272, 1204399.3603874727, 0.949562, 0.45566, 0.110164, 1228102.9191874317, 0.952075, 0.462178, 0.105031, 1252279.207840112, 0.954506, 0.468744, 0.099874, 1276925.0809726373, 0.956852, 0.475356, 0.094695, 1302062.4769213968, 0.959114, 0.482014, 0.089499, 1327688.125271955, 0.961293, 0.488716, 0.084289, 1353824.8365001546, 0.963387, 0.495462, 0.079073, 1380476.071930853, 0.965397, 0.502249, 0.073859, 1407644.9635951777, 0.967322, 0.509078, 0.068659, 1435355.6956752592, 0.969163, 0.515946, 0.063488, 1463604.662961616, 0.970919, 0.522853, 0.058367, 1492417.011057475, 0.97259, 0.529798, 0.053324, 1521788.9914313897, 0.974176, 0.53678, 0.048392, 1551746.749328146, 0.975677, 0.543798, 0.043618, 1582294.252099687, 0.977092, 0.55085, 0.03905, 1613435.0896632473, 0.978422, 0.557937, 0.034931, 1645196.9817983713, 0.979666, 0.565057, 0.031409, 1677575.7962333332, 0.980824, 0.572209, 0.028508, 1710600.3547233674, 0.981895, 0.579392, 0.02625, 1744266.3607218857, 0.982881, 0.586606, 0.024661, 1778603.7817678954, 0.983779, 0.593849, 0.02377, 1813617.1652188655, 0.984591, 0.601122, 0.023606, 1849310.625818637, 0.985315, 0.608422, 0.024202, 1885715.935829497, 0.985952, 0.61575, 0.025592, 1922828.3588638084, 0.986502, 0.623105, 0.027814, 1960680.9302624736, 0.986964, 0.630485, 0.030908, 1999268.7253468907, 0.987337, 0.63789, 0.034916, 2038626.092749163, 0.987622, 0.64532, 0.039886, 2078758.2446259737, 0.987819, 0.652773, 0.045581, 2119669.897274593, 0.987926, 0.66025, 0.05175, 2161397.4678912433, 0.987945, 0.667748, 0.058329, 2203935.527653879, 0.987874, 0.675267, 0.065257, 2247321.9414926413, 0.987714, 0.682807, 0.072489, 2291551.0647673924, 0.987464, 0.690366, 0.07999, 2336662.2676955876, 0.987124, 0.697944, 0.087731, 2382661.524423202, 0.986694, 0.70554, 0.095694, 2429554.2407448012, 0.986175, 0.713153, 0.103863, 2477382.157854914, 0.985566, 0.720782, 0.112229, 2526139.053266907, 0.984865, 0.728427, 0.120785, 2575868.3275601384, 0.984075, 0.736087, 0.129527, 2626563.510878428, 0.983196, 0.743758, 0.138453, 2678269.7291533668, 0.982228, 0.751442, 0.147565, 2730993.8299189466, 0.981173, 0.759135, 0.156863, 2784742.009267849, 0.980032, 0.766837, 0.166353, 2839562.1107328385, 0.978806, 0.774545, 0.176037, 2895447.002133177, 0.977497, 0.782258, 0.185923, 2952446.4289796064, 0.976108, 0.789974, 0.196018, 3010552.9755577547, 0.974638, 0.797692, 0.206332, 3069818.3649678114, 0.973088, 0.805409, 0.216877, 3130250.445816431, 0.971468, 0.813122, 0.227658, 3191856.3200317225, 0.969783, 0.820825, 0.238686, 3254690.8256137287, 0.968041, 0.828515, 0.249972, 3318745.7876952523, 0.966243, 0.836191, 0.261534, 3384078.2243132405, 0.964394, 0.843848, 0.273391, 3450679.6356157702, 0.962517, 0.851476, 0.285546, 3518609.3063422027, 0.960626, 0.859069, 0.29801, 3587858.398736384, 0.95872, 0.866624, 0.31082, 3658488.5543508553, 0.956834, 0.874129, 0.323974, 3730509.126845729, 0.954997, 0.881569, 0.337475, 3803928.5800190717, 0.953215, 0.888942, 0.351369, 3878812.2676383224, 0.951546, 0.896226, 0.365627, 3955150.44721888, 0.950018, 0.903409, 0.380271, 4033011.070610288, 0.948683, 0.910473, 0.395289, 4112384.0080239563, 0.947594, 0.917399, 0.410665, 4193339.912676016, 0.946809, 0.924168, 0.426373, 4275889.505681411, 0.946392, 0.930761, 0.442367, 4360042.488199968, 0.946403, 0.937159, 0.458592, 4445873.768368585, 0.946903, 0.943348, 0.47497, 4533372.179403789, 0.947937, 0.949318, 0.491426, 4622615.607350204, 0.949545, 0.955063, 0.50786, 4713592.441498624, 0.95174, 0.960587, 0.524203, 4806383.664185532, 0.954529, 0.965896, 0.540361, 4901001.563895231, 0.957896, 0.971003, 0.556275, 4997457.260044987, 0.961812, 0.975924, 0.571925, 5095836.611938563, 0.966249, 0.980678, 0.587206, 5196126.820268805, 0.971162, 0.985282, 0.602154, 5298417.15760134, 0.976511, 0.989753, 0.61676, 5402694.315803674, 0.982257, 0.994109, 0.631017, 5509051.11639453, 0.988362, 0.998364, 0.644924]
temperatureLUT.UseLogScale = 1
temperatureLUT.NanColor = [0.0, 1.0, 0.0]
temperatureLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
slice2Display.Representation = 'Surface'
slice2Display.ColorArrayName = ['CELLS', 'temperature']
slice2Display.LookupTable = temperatureLUT
slice2Display.SelectTCoordArray = 'None'
slice2Display.SelectNormalArray = 'None'
slice2Display.SelectTangentArray = 'None'
slice2Display.OSPRayScaleFunction = 'PiecewiseFunction'
slice2Display.SelectOrientationVectors = 'None'
slice2Display.ScaleFactor = 20.024109649658204
slice2Display.SelectScaleArray = 'None'
slice2Display.GlyphType = 'Arrow'
slice2Display.GlyphTableIndexArray = 'None'
slice2Display.GaussianRadius = 1.0012054824829102
slice2Display.SetScaleArray = ['POINTS', '']
slice2Display.ScaleTransferFunction = 'PiecewiseFunction'
slice2Display.OpacityArray = ['POINTS', '']
slice2Display.OpacityTransferFunction = 'PiecewiseFunction'
slice2Display.DataAxesGrid = 'GridAxesRepresentation'
slice2Display.PolarAxes = 'PolarAxesRepresentation'
slice2Display.SelectInputVectors = ['POINTS', '']
slice2Display.WriteLog = ''

# show data from slice4
slice4Display = Show(slice4, renderView1, 'GeometryRepresentation')

# get color transfer function/color map for 'pkB'
pkBLUT = GetColorTransferFunction('pkB')
pkBLUT.TransferFunction2D = None
pkBLUT.RGBPoints = [123.77585621759171, 0.0, 0.0, 0.34902, 160.9857471272711, 0.039216, 0.062745, 0.380392, 209.38179359119852, 0.062745, 0.117647, 0.411765, 272.3268132104143, 0.090196, 0.184314, 0.45098, 354.19456449081235, 0.12549, 0.262745, 0.501961, 460.6736591079044, 0.160784, 0.337255, 0.541176, 599.1628372415937, 0.2, 0.396078, 0.568627, 779.2850718371725, 0.239216, 0.454902, 0.6, 1013.5562245216461, 0.286275, 0.521569, 0.65098, 1318.2547149847358, 0.337255, 0.592157, 0.701961, 1714.5526331305946, 0.388235, 0.654902, 0.74902, 2229.9868897560473, 0.466667, 0.737255, 0.819608, 2900.3726292169595, 0.572549, 0.819608, 0.878431, 3772.2918582858356, 0.654902, 0.866667, 0.909804, 4906.330214518501, 0.752941, 0.917647, 0.941176, 6381.286782204507, 0.823529, 0.956863, 0.968627, 8299.64947655573, 0.988235, 0.960784, 0.901961, 8299.64947655573, 0.941176, 0.984314, 0.988235, 9820.117933997974, 0.988235, 0.945098, 0.85098, 11619.13120668899, 0.980392, 0.898039, 0.784314, 14039.85839148255, 0.968627, 0.835294, 0.698039, 18260.56520053925, 0.94902, 0.733333, 0.588235, 23750.114292138125, 0.929412, 0.65098, 0.509804, 30889.949062089614, 0.909804, 0.564706, 0.435294, 40176.18363101314, 0.878431, 0.458824, 0.352941, 52254.0755217321, 0.839216, 0.388235, 0.286275, 67962.86162240492, 0.760784, 0.294118, 0.211765, 88394.07287925686, 0.701961, 0.211765, 0.168627, 114967.37973739943, 0.65098, 0.156863, 0.129412, 149529.23847889702, 0.6, 0.094118, 0.094118, 194481.19293620266, 0.54902, 0.066667, 0.098039, 252946.7466740716, 0.501961, 0.05098, 0.12549, 328988.40081665793, 0.45098, 0.054902, 0.172549, 427889.9384753226, 0.4, 0.054902, 0.192157, 556523.5704174566, 0.34902, 0.070588, 0.211765]
pkBLUT.UseLogScale = 1
pkBLUT.ColorSpace = 'Lab'
pkBLUT.NanColor = [0.25, 0.0, 0.0]
pkBLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
slice4Display.Representation = 'Surface'
slice4Display.ColorArrayName = ['CELLS', 'p/kB']
slice4Display.LookupTable = pkBLUT
slice4Display.SelectTCoordArray = 'None'
slice4Display.SelectNormalArray = 'None'
slice4Display.SelectTangentArray = 'None'
slice4Display.OSPRayScaleFunction = 'PiecewiseFunction'
slice4Display.SelectOrientationVectors = 'None'
slice4Display.ScaleFactor = 20.024109649658204
slice4Display.SelectScaleArray = 'p/kB'
slice4Display.GlyphType = 'Arrow'
slice4Display.GlyphTableIndexArray = 'p/kB'
slice4Display.GaussianRadius = 1.0012054824829102
slice4Display.SetScaleArray = ['POINTS', '']
slice4Display.ScaleTransferFunction = 'PiecewiseFunction'
slice4Display.OpacityArray = ['POINTS', '']
slice4Display.OpacityTransferFunction = 'PiecewiseFunction'
slice4Display.DataAxesGrid = 'GridAxesRepresentation'
slice4Display.PolarAxes = 'PolarAxesRepresentation'
slice4Display.SelectInputVectors = ['POINTS', '']
slice4Display.WriteLog = ''

# show data from slice5
slice5Display = Show(slice5, renderView1, 'GeometryRepresentation')

# get color transfer function/color map for 'tr1'
tr1LUT = GetColorTransferFunction('tr1')
tr1LUT.AutomaticRescaleRangeMode = 'Never'
tr1LUT.TransferFunction2D = None
tr1LUT.RGBPoints = [0.0, 0.831373, 0.909804, 0.980392, 0.0125, 0.74902, 0.862745, 0.960784, 0.025, 0.694118, 0.827451, 0.941176, 0.05, 0.568627, 0.760784, 0.921569, 0.075, 0.45098, 0.705882, 0.901961, 0.1, 0.345098, 0.643137, 0.858824, 0.125, 0.247059, 0.572549, 0.819608, 0.15, 0.180392, 0.521569, 0.780392, 0.16, 0.14902, 0.490196, 0.74902, 0.18, 0.129412, 0.447059, 0.709804, 0.2, 0.101961, 0.427451, 0.690196, 0.21, 0.094118, 0.403922, 0.658824, 0.22, 0.090196, 0.392157, 0.639216, 0.23, 0.082353, 0.368627, 0.619608, 0.24, 0.070588, 0.352941, 0.6, 0.25, 0.066667, 0.329412, 0.568627, 0.26, 0.07451, 0.313725, 0.541176, 0.27, 0.086275, 0.305882, 0.509804, 0.28, 0.094118, 0.286275, 0.478431, 0.29, 0.101961, 0.278431, 0.45098, 0.3, 0.109804, 0.266667, 0.411765, 0.31, 0.113725, 0.258824, 0.380392, 0.32, 0.113725, 0.25098, 0.34902, 0.33, 0.109804, 0.266667, 0.321569, 0.34, 0.105882, 0.301961, 0.262745, 0.35, 0.094118, 0.309804, 0.243137, 0.36, 0.082353, 0.321569, 0.227451, 0.37, 0.07451, 0.341176, 0.219608, 0.38, 0.070588, 0.360784, 0.211765, 0.39, 0.066667, 0.380392, 0.215686, 0.4, 0.062745, 0.4, 0.176471, 0.425, 0.07451, 0.419608, 0.145098, 0.45, 0.086275, 0.439216, 0.117647, 0.475, 0.121569, 0.470588, 0.117647, 0.5, 0.184314, 0.501961, 0.14902, 0.525, 0.254902, 0.541176, 0.188235, 0.55, 0.32549, 0.580392, 0.231373, 0.575, 0.403922, 0.619608, 0.278431, 0.6, 0.501961, 0.670588, 0.333333, 0.63, 0.592157, 0.729412, 0.4, 0.65, 0.741176, 0.788235, 0.490196, 0.67, 0.858824, 0.858824, 0.603922, 0.7, 0.921569, 0.835294, 0.580392, 0.75, 0.901961, 0.729412, 0.494118, 0.8, 0.858824, 0.584314, 0.388235, 0.85, 0.8, 0.439216, 0.321569, 0.9, 0.678431, 0.298039, 0.203922, 0.95, 0.54902, 0.168627, 0.109804, 0.975, 0.478431, 0.082353, 0.047059, 1.0, 0.45098, 0.007843, 0.0]
tr1LUT.ColorSpace = 'RGB'
tr1LUT.NanColor = [0.25, 0.0, 0.0]
tr1LUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
slice5Display.Representation = 'Surface'
slice5Display.ColorArrayName = ['CELLS', 'tr1']
slice5Display.LookupTable = tr1LUT
slice5Display.SelectTCoordArray = 'None'
slice5Display.SelectNormalArray = 'None'
slice5Display.SelectTangentArray = 'None'
slice5Display.OSPRayScaleFunction = 'PiecewiseFunction'
slice5Display.SelectOrientationVectors = 'None'
slice5Display.ScaleFactor = 20.024109649658204
slice5Display.SelectScaleArray = 'None'
slice5Display.GlyphType = 'Arrow'
slice5Display.GlyphTableIndexArray = 'None'
slice5Display.GaussianRadius = 1.0012054824829102
slice5Display.SetScaleArray = ['POINTS', '']
slice5Display.ScaleTransferFunction = 'PiecewiseFunction'
slice5Display.OpacityArray = ['POINTS', '']
slice5Display.OpacityTransferFunction = 'PiecewiseFunction'
slice5Display.DataAxesGrid = 'GridAxesRepresentation'
slice5Display.PolarAxes = 'PolarAxesRepresentation'
slice5Display.SelectInputVectors = ['POINTS', '']
slice5Display.WriteLog = ''

# show data from slice6
slice6Display = Show(slice6, renderView1, 'GeometryRepresentation')

# get color transfer function/color map for 'mach'
machLUT = GetColorTransferFunction('mach')
machLUT.TransferFunction2D = None
machLUT.RGBPoints = [0.0, 0.18995, 0.07176, 0.23217, 0.04436954890876263, 0.19483, 0.08339, 0.26149, 0.0887379664030794, 0.19956, 0.09498, 0.29024, 0.1331109095551796, 0.20415, 0.10652, 0.31844, 0.17747366997726707, 0.2086, 0.11802, 0.34607, 0.22184774454381315, 0.21291, 0.12947, 0.37314, 0.26621050496590065, 0.21708, 0.14087, 0.39964, 0.31058457953244667, 0.22111, 0.15223, 0.42558, 0.35495865409899274, 0.225, 0.16354, 0.45096, 0.3993214145210802, 0.22875, 0.17481, 0.47578, 0.4436954890876263, 0.23236, 0.18603, 0.50004, 0.4880582495097138, 0.23582, 0.1972, 0.52373, 0.5324323240762598, 0.23915, 0.20833, 0.54686, 0.5767950844983473, 0.24234, 0.21941, 0.56942, 0.6211691590648933, 0.24539, 0.23044, 0.59142, 0.6655432336314395, 0.2483, 0.24143, 0.61286, 0.709905994053527, 0.25107, 0.25237, 0.63374, 0.754280068620073, 0.25369, 0.26327, 0.65406, 0.7986428290421604, 0.25618, 0.27412, 0.67381, 0.8430169036087066, 0.25853, 0.28492, 0.693, 0.887379664030794, 0.26074, 0.29568, 0.71162, 0.93175373859734, 0.2628, 0.30639, 0.72968, 0.9761278131638862, 0.26473, 0.31706, 0.74718, 1.0204905735859737, 0.26652, 0.32768, 0.76412, 1.0648646481525197, 0.26816, 0.33825, 0.7805, 1.1092274085746072, 0.26967, 0.34878, 0.79631, 1.1535901689966945, 0.27103, 0.35926, 0.81156, 1.1979416152743236, 0.27226, 0.3697, 0.82624, 1.2422930615519525, 0.27334, 0.38008, 0.84037, 1.2867576492741672, 0.27429, 0.39043, 0.85393, 1.331109095551796, 0.27509, 0.40072, 0.86692, 1.375460541829425, 0.27576, 0.41097, 0.87936, 1.419811988107054, 0.27628, 0.42118, 0.89123, 1.4641634343846828, 0.27667, 0.43134, 0.90254, 1.5085148806623117, 0.27691, 0.44145, 0.91328, 1.5528663269399408, 0.27701, 0.45152, 0.92347, 1.5973309146621553, 0.27698, 0.46153, 0.93309, 1.6416823609397844, 0.2768, 0.47151, 0.94214, 1.6860338072174132, 0.27648, 0.48144, 0.95064, 1.730385253495042, 0.27603, 0.49132, 0.95857, 1.774736699772671, 0.27543, 0.50115, 0.96594, 1.8190881460503, 0.27469, 0.51094, 0.97275, 1.8635527337725144, 0.27381, 0.52069, 0.97899, 1.9079041800501435, 0.27273, 0.5304, 0.98461, 1.9522556263277724, 0.27106, 0.54015, 0.9893, 1.996607072605401, 0.26878, 0.54995, 0.99303, 2.04095851888303, 0.26592, 0.55979, 0.99583, 2.085309965160659, 0.26252, 0.56967, 0.99773, 2.1297745528828735, 0.25862, 0.57958, 0.99876, 2.1741259991605024, 0.25425, 0.5895, 0.99896, 2.2184774454381317, 0.24946, 0.59943, 0.99835, 2.2628288917157606, 0.24427, 0.60937, 0.99697, 2.307180337993389, 0.23874, 0.61931, 0.99485, 2.3515317842710184, 0.23288, 0.62923, 0.99202, 2.3958832305486473, 0.22676, 0.63913, 0.98851, 2.440347818270862, 0.22039, 0.64901, 0.98436, 2.4846992645484907, 0.21382, 0.65886, 0.97959, 2.5290507108261195, 0.20708, 0.66866, 0.97423, 2.573402157103749, 0.20021, 0.67842, 0.96833, 2.6177536033813773, 0.19326, 0.68812, 0.9619, 2.662105049659006, 0.18625, 0.69775, 0.95498, 2.706569637381221, 0.17923, 0.70732, 0.94761, 2.75092108365885, 0.17223, 0.7168, 0.93981, 2.795272529936479, 0.16529, 0.7262, 0.93161, 2.839623976214108, 0.15844, 0.73551, 0.92305, 2.8839754224917367, 0.15173, 0.74472, 0.91416, 2.9283268687693655, 0.14519, 0.75381, 0.90496, 2.97279145649158, 0.13886, 0.76279, 0.8955, 3.0171429027692094, 0.13278, 0.77165, 0.8858, 3.0614943490468383, 0.12698, 0.78037, 0.8759, 3.1058457953244667, 0.12151, 0.78896, 0.86581, 3.150197241602096, 0.11639, 0.7974, 0.85559, 3.194548687879725, 0.11167, 0.80569, 0.84525, 3.238900134157354, 0.10738, 0.81381, 0.83484, 3.2833647218795687, 0.10357, 0.82177, 0.82437, 3.327716168157197, 0.10026, 0.82955, 0.81389, 3.3720676144348265, 0.0975, 0.83714, 0.80342, 3.4164190607124554, 0.09532, 0.84455, 0.79299, 3.460770506990084, 0.09377, 0.85175, 0.78264, 3.505121953267713, 0.09287, 0.85875, 0.7724, 3.5495865409899277, 0.09267, 0.86554, 0.7623, 3.5939379872675565, 0.0932, 0.87211, 0.75237, 3.638289433545186, 0.09451, 0.87844, 0.74265, 3.6826408798228143, 0.09662, 0.88454, 0.73316, 3.726992326100443, 0.09958, 0.8904, 0.72393, 3.7713437723780725, 0.10342, 0.896, 0.715, 3.815695218655701, 0.10815, 0.90142, 0.70599, 3.8601598063779154, 0.11374, 0.90673, 0.69651, 3.9045112526555448, 0.12014, 0.91193, 0.6866, 3.9488626989331737, 0.12733, 0.91701, 0.67627, 3.993214145210802, 0.13526, 0.92197, 0.66556, 4.037565591488431, 0.14391, 0.9268, 0.65448, 4.08191703776606, 0.15323, 0.93151, 0.64308, 4.126381625488275, 0.16319, 0.93609, 0.63137, 4.170733071765904, 0.17377, 0.94053, 0.61938, 4.215084518043533, 0.18491, 0.94484, 0.60713, 4.259435964321162, 0.19659, 0.94901, 0.59466, 4.30378741059879, 0.20877, 0.95304, 0.58199, 4.348138856876419, 0.22142, 0.95692, 0.56914, 4.392603444598634, 0.23449, 0.96065, 0.55614, 4.4369548908762635, 0.24797, 0.96423, 0.54303, 4.4813063371538915, 0.2618, 0.96765, 0.52981, 4.525657783431521, 0.27597, 0.97092, 0.51653, 4.57000922970915, 0.29042, 0.97403, 0.50321, 4.614360675986778, 0.30513, 0.97697, 0.48987, 4.658712122264408, 0.32006, 0.97974, 0.47654, 4.703176709986622, 0.33517, 0.98234, 0.46325, 4.747528156264251, 0.35043, 0.98477, 0.45002, 4.79187960254188, 0.36581, 0.98702, 0.43688, 4.836231048819509, 0.38127, 0.98909, 0.42386, 4.880582495097138, 0.39678, 0.99098, 0.41098, 4.924933941374767, 0.41229, 0.99268, 0.39826, 4.969398529096981, 0.42778, 0.99419, 0.38575, 5.01374997537461, 0.44321, 0.99551, 0.37345, 5.058101421652239, 0.45854, 0.99663, 0.3614, 5.102452867929868, 0.47375, 0.99755, 0.34963, 5.146804314207498, 0.48879, 0.99828, 0.33816, 5.191155760485126, 0.50362, 0.99879, 0.32701, 5.23562034820734, 0.51822, 0.9991, 0.31622, 5.279971794484969, 0.53255, 0.99919, 0.30581, 5.324323240762599, 0.54658, 0.99907, 0.29581, 5.368674687040228, 0.56026, 0.99873, 0.28623, 5.413026133317857, 0.57357, 0.99817, 0.27712, 5.4573775795954855, 0.58646, 0.99739, 0.26849, 5.5017290258731135, 0.59891, 0.99638, 0.26038, 5.546193613595329, 0.61088, 0.99514, 0.2528, 5.590545059872958, 0.62233, 0.99366, 0.24579, 5.634896506150587, 0.63323, 0.99195, 0.23937, 5.679247952428216, 0.64362, 0.98999, 0.23356, 5.723599398705844, 0.65394, 0.98775, 0.22835, 5.767950844983473, 0.66428, 0.98524, 0.2237, 5.812415432705689, 0.67462, 0.98246, 0.2196, 5.856766878983318, 0.68494, 0.97941, 0.21602, 5.901118325260946, 0.69525, 0.9761, 0.21294, 5.945469771538575, 0.70553, 0.97255, 0.21032, 5.989821217816204, 0.71577, 0.96875, 0.20815, 6.034172664093832, 0.72596, 0.9647, 0.2064, 6.078524110371462, 0.7361, 0.96043, 0.20504, 6.1229886980936765, 0.74617, 0.95593, 0.20406, 6.167340144371305, 0.75617, 0.95121, 0.20343, 6.211691590648933, 0.76608, 0.94627, 0.20311, 6.256043036926563, 0.77591, 0.94113, 0.2031, 6.300394483204192, 0.78563, 0.93579, 0.20336, 6.34474592948182, 0.79524, 0.93025, 0.20386, 6.389210517204036, 0.80473, 0.92452, 0.20459, 6.433561963481664, 0.8141, 0.91861, 0.20552, 6.477913409759293, 0.82333, 0.91253, 0.20663, 6.522264856036923, 0.83241, 0.90627, 0.20788, 6.566616302314551, 0.84133, 0.89986, 0.20926, 6.61096774859218, 0.8501, 0.89328, 0.21074, 6.655432336314394, 0.85868, 0.88655, 0.2123, 6.699783782592024, 0.86709, 0.87968, 0.21391, 6.744135228869653, 0.8753, 0.87267, 0.21555, 6.788486675147281, 0.88331, 0.86553, 0.21719, 6.832838121424911, 0.89112, 0.85826, 0.2188, 6.87718956770254, 0.8987, 0.85087, 0.22038, 6.921541013980168, 0.90605, 0.84337, 0.22188, 6.966005601702382, 0.91317, 0.83576, 0.22328, 7.010357047980012, 0.92004, 0.82806, 0.22456, 7.054708494257641, 0.92666, 0.82025, 0.2257, 7.099059940535269, 0.93301, 0.81236, 0.22667, 7.1434113868128986, 0.93909, 0.80439, 0.22744, 7.187762833090527, 0.94489, 0.79634, 0.228, 7.232227420812742, 0.95039, 0.78823, 0.22831, 7.276578867090372, 0.9556, 0.78005, 0.22836, 7.320930313368, 0.96049, 0.77181, 0.22811, 7.365281759645629, 0.96507, 0.76352, 0.22754, 7.409633205923258, 0.96931, 0.75519, 0.22663, 7.453984652200886, 0.97323, 0.74682, 0.22536, 7.498449239923101, 0.97679, 0.73842, 0.22369, 7.54280068620073, 0.98, 0.73, 0.22161, 7.5871521324783595, 0.98289, 0.7214, 0.21918, 7.631503578755988, 0.98549, 0.7125, 0.2165, 7.675855025033616, 0.98781, 0.7033, 0.21358, 7.720206471311246, 0.98986, 0.69382, 0.21043, 7.764557917588875, 0.99163, 0.68408, 0.20706, 7.8090225053110895, 0.99314, 0.67408, 0.20348, 7.8533739515887175, 0.99438, 0.66386, 0.19971, 7.897725397866347, 0.99535, 0.65341, 0.19577, 7.942076844143976, 0.99607, 0.64277, 0.19165, 7.986428290421604, 0.99654, 0.63193, 0.18738, 8.030779736699234, 0.99675, 0.62093, 0.18297, 8.075244324421448, 0.99672, 0.60977, 0.17842, 8.119595770699078, 0.99644, 0.59846, 0.17376, 8.163947216976707, 0.99593, 0.58703, 0.16899, 8.208298663254334, 0.99517, 0.57549, 0.16412, 8.252650109531965, 0.99419, 0.56386, 0.15918, 8.297001555809594, 0.99297, 0.55214, 0.15417, 8.34135300208722, 0.99153, 0.54036, 0.1491, 8.385817589809436, 0.98987, 0.52854, 0.14398, 8.430169036087065, 0.98799, 0.51667, 0.13883, 8.474520482364694, 0.9859, 0.50479, 0.13367, 8.518871928642325, 0.9836, 0.49291, 0.12849, 8.563223374919952, 0.98108, 0.48104, 0.12332, 8.60757482119758, 0.97837, 0.4692, 0.11817, 8.652039408919796, 0.97545, 0.4574, 0.11305, 8.696390855197425, 0.97234, 0.44565, 0.10797, 8.740742301475054, 0.96904, 0.43399, 0.10294, 8.785093747752683, 0.96555, 0.42241, 0.09798, 8.829445194030312, 0.96187, 0.41093, 0.0931, 8.87379664030794, 0.95801, 0.39958, 0.08831, 8.918261228030156, 0.95398, 0.38836, 0.08362, 8.962612674307783, 0.94977, 0.37729, 0.07905, 9.006964120585414, 0.94538, 0.36638, 0.07461, 9.051315566863043, 0.94084, 0.35566, 0.07031, 9.09566701314067, 0.93612, 0.34513, 0.06616, 9.1400184594183, 0.93125, 0.33482, 0.06218, 9.18436990569593, 0.92623, 0.32473, 0.05837, 9.228834493418143, 0.92105, 0.31489, 0.05475, 9.273185939695772, 0.91572, 0.3053, 0.05134, 9.3175373859734, 0.91024, 0.29599, 0.04814, 9.36188883225103, 0.90463, 0.28696, 0.04516, 9.40624027852866, 0.89888, 0.27824, 0.04243, 9.450591724806287, 0.89298, 0.26981, 0.03993, 9.495056312528503, 0.88691, 0.26152, 0.03753, 9.539407758806131, 0.88066, 0.25334, 0.03521, 9.58375920508376, 0.87422, 0.24526, 0.03297, 9.62811065136139, 0.8676, 0.2373, 0.03082, 9.672462097639018, 0.86079, 0.22945, 0.02875, 9.716813543916647, 0.8538, 0.2217, 0.02677, 9.761278131638862, 0.84662, 0.21407, 0.02487, 9.805629577916491, 0.83926, 0.20654, 0.02305, 9.849981024194118, 0.83172, 0.19912, 0.02131, 9.894332470471749, 0.82399, 0.19182, 0.01966, 9.938683916749378, 0.81608, 0.18462, 0.01809, 9.983035363027005, 0.80799, 0.17753, 0.0166, 10.027386809304636, 0.79971, 0.17055, 0.0152, 10.07185139702685, 0.79125, 0.16368, 0.01387, 10.116202843304478, 0.7826, 0.15693, 0.01264, 10.160554289582107, 0.77377, 0.15028, 0.01148, 10.204905735859736, 0.76476, 0.14374, 0.01041, 10.249257182137365, 0.75556, 0.13731, 0.00942, 10.293608628414995, 0.74617, 0.13098, 0.00851, 10.338073216137209, 0.73661, 0.12477, 0.00769, 10.382424662414836, 0.72686, 0.11867, 0.00695, 10.426776108692469, 0.71692, 0.11268, 0.00629, 10.471127554970096, 0.7068, 0.1068, 0.00571, 10.515479001247725, 0.6965, 0.10102, 0.00522, 10.559830447525353, 0.68602, 0.09536, 0.00481, 10.604181893802982, 0.67535, 0.0898, 0.00449, 10.648646481525198, 0.66449, 0.08436, 0.00424, 10.692997927802827, 0.65345, 0.07902, 0.00408, 10.737349374080456, 0.64223, 0.0738, 0.00401, 10.781700820358084, 0.63082, 0.06868, 0.00401, 10.826052266635713, 0.61923, 0.06367, 0.0041, 10.87040371291334, 0.60746, 0.05878, 0.00427, 10.914868300635558, 0.5955, 0.05399, 0.00453, 10.959219746913185, 0.58336, 0.04931, 0.00486, 11.003571193190814, 0.57103, 0.04474, 0.00529, 11.047922639468444, 0.55852, 0.04028, 0.00579, 11.092274085746071, 0.54583, 0.03593, 0.00638, 11.1366255320237, 0.53295, 0.03169, 0.00705, 11.181090119745916, 0.51989, 0.02756, 0.0078, 11.225441566023544, 0.50664, 0.02354, 0.00863, 11.269793012301173, 0.49321, 0.01963, 0.00955, 11.314144458578802, 0.4796, 0.01583, 0.01055]
machLUT.ColorSpace = 'RGB'
machLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
slice6Display.Representation = 'Surface'
slice6Display.ColorArrayName = ['CELLS', 'mach']
slice6Display.LookupTable = machLUT
slice6Display.SelectTCoordArray = 'None'
slice6Display.SelectNormalArray = 'None'
slice6Display.SelectTangentArray = 'None'
slice6Display.OSPRayScaleFunction = 'PiecewiseFunction'
slice6Display.SelectOrientationVectors = 'None'
slice6Display.ScaleFactor = 20.021545028686525
slice6Display.SelectScaleArray = 'None'
slice6Display.GlyphType = 'Arrow'
slice6Display.GlyphTableIndexArray = 'None'
slice6Display.GaussianRadius = 1.0010772514343262
slice6Display.SetScaleArray = ['POINTS', '']
slice6Display.ScaleTransferFunction = 'PiecewiseFunction'
slice6Display.OpacityArray = ['POINTS', '']
slice6Display.OpacityTransferFunction = 'PiecewiseFunction'
slice6Display.DataAxesGrid = 'GridAxesRepresentation'
slice6Display.PolarAxes = 'PolarAxesRepresentation'
slice6Display.SelectInputVectors = ['POINTS', '']
slice6Display.WriteLog = ''

# show data from annotateTimeFilter1
annotateTimeFilter1Display = Show(annotateTimeFilter1, renderView1, 'TextSourceRepresentation')

# trace defaults for the display properties.
annotateTimeFilter1Display.WindowLocation = 'Any Location'
annotateTimeFilter1Display.Position = [0.4555194805194805, 0.045308953341740225]
annotateTimeFilter1Display.Bold = 1
annotateTimeFilter1Display.FontSize = 22

# show data from slice7
slice7Display = Show(slice7, renderView1, 'GeometryRepresentation')

# get color transfer function/color map for 'ndens'
ndensLUT = GetColorTransferFunction('ndens')
ndensLUT.TransferFunction2D = None
ndensLUT.RGBPoints = [0.0006496801599782788, 0.267004, 0.004874, 0.329415, 0.0006736667676893968, 0.26851, 0.009605, 0.335427, 0.0006985325189826308, 0.269944, 0.014625, 0.341379, 0.0007243227870844858, 0.271305, 0.019942, 0.347269, 0.0007510583055091822, 0.272594, 0.025563, 0.353093, 0.000778787859299201, 0.273809, 0.031497, 0.358853, 0.0008075337410144952, 0.274952, 0.037752, 0.364543, 0.0008373484040632397, 0.276022, 0.044167, 0.370164, 0.000868263843571916, 0.277018, 0.050344, 0.375715, 0.0009003123782877055, 0.277941, 0.056324, 0.381191, 0.0009335524880613704, 0.278791, 0.062145, 0.386592, 0.0009680108955421712, 0.279566, 0.067836, 0.391917, 0.0010037504779425855, 0.280267, 0.073417, 0.397163, 0.0010407999673074722, 0.280894, 0.078907, 0.402329, 0.0010792269688683364, 0.281446, 0.08432, 0.407414, 0.0011190727199443273, 0.281924, 0.089666, 0.412415, 0.0011603788749571708, 0.282327, 0.094955, 0.417331, 0.0012032208063943207, 0.282656, 0.100196, 0.42216, 0.0012476329560766697, 0.28291, 0.105393, 0.426902, 0.0012936963640863507, 0.283091, 0.110553, 0.431554, 0.0013414480620789185, 0.283197, 0.11568, 0.436115, 0.0013909751839029896, 0.283229, 0.120777, 0.440584, 0.001442330878793375, 0.283187, 0.125848, 0.44496, 0.0014955688335727693, 0.283072, 0.130895, 0.449241, 0.0015507861930148116, 0.282884, 0.13592, 0.453427, 0.0016080273478913541, 0.282623, 0.140926, 0.457517, 0.0016673967477263557, 0.28229, 0.145912, 0.46151, 0.001728942121232487, 0.281887, 0.150881, 0.465405, 0.0017927757719608999, 0.281412, 0.155834, 0.469201, 0.0018589490175597839, 0.280868, 0.160771, 0.472899, 0.0019275826061869385, 0.280255, 0.165693, 0.476498, 0.0019987501908749583, 0.279574, 0.170599, 0.479997, 0.0020725261696338195, 0.278826, 0.17549, 0.483397, 0.0021490451635395196, 0.278012, 0.180367, 0.486697, 0.002228368688340641, 0.277134, 0.185228, 0.489898, 0.002310641487874419, 0.276194, 0.190074, 0.493001, 0.0023959297035338967, 0.275191, 0.194905, 0.496005, 0.0024843889630932507, 0.274128, 0.199721, 0.498911, 0.0025761141951852096, 0.273006, 0.20452, 0.501721, 0.0026712012886159213, 0.271828, 0.209303, 0.504434, 0.0027698237514437916, 0.270595, 0.214069, 0.507052, 0.002872060869011169, 0.269308, 0.218818, 0.509577, 0.0029780991962239417, 0.267968, 0.223549, 0.512008, 0.0030880239802442066, 0.26658, 0.228262, 0.514349, 0.003202035803876194, 0.265145, 0.232956, 0.516599, 0.0033202570170760867, 0.263663, 0.237631, 0.518762, 0.003442811207331609, 0.262138, 0.242286, 0.520837, 0.003569922002675066, 0.260571, 0.246922, 0.522828, 0.003701691591012085, 0.258965, 0.251537, 0.524736, 0.0038383604159676213, 0.257322, 0.25613, 0.526563, 0.003980038349413273, 0.255645, 0.260703, 0.528312, 0.004126983915006307, 0.253935, 0.265254, 0.529983, 0.004279354805018802, 0.252194, 0.269783, 0.531579, 0.0044373103067308454, 0.250425, 0.27429, 0.533103, 0.0046011386459302575, 0.248629, 0.278775, 0.534556, 0.004770971528777973, 0.246811, 0.283237, 0.535941, 0.004947118854048821, 0.244972, 0.287675, 0.53726, 0.005129722231479438, 0.243113, 0.292092, 0.538516, 0.00531911486252055, 0.241237, 0.296485, 0.539709, 0.005515499990830338, 0.239346, 0.300855, 0.540844, 0.00571908291581301, 0.237441, 0.305202, 0.541921, 0.005930235120881956, 0.235526, 0.309527, 0.542944, 0.006149126357170823, 0.233603, 0.313828, 0.543914, 0.006376156041593514, 0.231674, 0.318106, 0.544834, 0.006611506689631152, 0.229739, 0.322361, 0.545706, 0.006855607752143076, 0.227802, 0.326594, 0.546532, 0.007108721182261447, 0.225863, 0.330805, 0.547314, 0.007371111582692425, 0.223925, 0.334994, 0.548053, 0.007643257744481992, 0.221989, 0.339161, 0.548752, 0.007925378453502935, 0.220057, 0.343307, 0.549413, 0.008217988503242913, 0.21813, 0.347432, 0.550038, 0.0085213231310637, 0.21621, 0.351535, 0.550627, 0.008835935840079379, 0.214298, 0.355619, 0.551184, 0.009162164251862304, 0.212395, 0.359683, 0.55171, 0.009500349402921465, 0.210503, 0.363727, 0.552206, 0.009851108389087903, 0.208623, 0.367752, 0.552675, 0.010214723195271572, 0.206756, 0.371758, 0.553117, 0.010591857319500977, 0.204903, 0.375746, 0.553533, 0.010982813950393562, 0.203063, 0.379716, 0.553925, 0.01138830647736421, 0.201239, 0.38367, 0.554294, 0.011808660887139447, 0.19943, 0.387607, 0.554642, 0.01224464421207723, 0.197636, 0.391528, 0.554969, 0.012696724320675779, 0.19586, 0.395433, 0.555276, 0.013165373813776873, 0.1941, 0.399323, 0.555565, 0.013651447849117353, 0.192357, 0.403199, 0.555836, 0.014155337195140774, 0.190631, 0.407061, 0.556089, 0.01467796131272163, 0.188923, 0.41091, 0.556326, 0.015219740353931706, 0.187231, 0.414746, 0.556547, 0.015781662918023923, 0.185556, 0.41857, 0.556753, 0.01636433202316697, 0.183898, 0.422383, 0.556944, 0.01696835678686972, 0.182256, 0.426184, 0.55712, 0.017594839389882464, 0.180629, 0.429975, 0.557282, 0.01824428347900361, 0.179019, 0.433756, 0.55743, 0.018917874112887093, 0.177423, 0.437527, 0.557565, 0.019616152809788262, 0.175841, 0.44129, 0.557685, 0.020340393738225212, 0.174274, 0.445044, 0.557792, 0.02109137410571065, 0.172719, 0.448791, 0.557885, 0.021869878980968174, 0.171176, 0.45253, 0.557965, 0.022677328923450094, 0.169646, 0.456262, 0.55803, 0.02351437306463501, 0.168126, 0.459988, 0.558082, 0.024382538782198447, 0.166617, 0.463708, 0.558119, 0.025282524018720217, 0.165117, 0.467423, 0.558141, 0.026215971002239373, 0.163625, 0.471133, 0.558148, 0.027183881446384353, 0.162142, 0.474838, 0.55814, 0.02818726719680366, 0.160665, 0.47854, 0.558115, 0.029227959159323795, 0.159194, 0.482237, 0.558073, 0.030306793975173964, 0.157729, 0.485932, 0.558013, 0.031425740224184345, 0.15627, 0.489624, 0.557936, 0.032585697458382766, 0.154815, 0.493313, 0.55784, 0.033788782283927586, 0.153364, 0.497, 0.557724, 0.03503628577196398, 0.151918, 0.500685, 0.557587, 0.03632951205241787, 0.150476, 0.504369, 0.55743, 0.03767082091117506, 0.149039, 0.508051, 0.55725, 0.03906129066375333, 0.147607, 0.511733, 0.557049, 0.040503458538900895, 0.14618, 0.515413, 0.556823, 0.04199848393550546, 0.144759, 0.519093, 0.556572, 0.043549094867900776, 0.143343, 0.522773, 0.556295, 0.04515695534928832, 0.141935, 0.526453, 0.555991, 0.04682374622384251, 0.140536, 0.530132, 0.555659, 0.048552508931131874, 0.139147, 0.533812, 0.555298, 0.05034463327160512, 0.13777, 0.537492, 0.554906, 0.052203389384284385, 0.136408, 0.541173, 0.554483, 0.05413027157493447, 0.135066, 0.544853, 0.554029, 0.056128795878966846, 0.133743, 0.548535, 0.553541, 0.05820110698061911, 0.132444, 0.552216, 0.553018, 0.060349371256938976, 0.131172, 0.555899, 0.552459, 0.06257750870537393, 0.129933, 0.559582, 0.551864, 0.06488731058762365, 0.128729, 0.563265, 0.551229, 0.06728299166328838, 0.127568, 0.566949, 0.550556, 0.0697664778870522, 0.126453, 0.570633, 0.549841, 0.07234230094515368, 0.125394, 0.574318, 0.549086, 0.07501253161342959, 0.124395, 0.578002, 0.548287, 0.07778204233588927, 0.123463, 0.581687, 0.547445, 0.08065380516845433, 0.122606, 0.585371, 0.546557, 0.08363082222846235, 0.121831, 0.589055, 0.545623, 0.08671852576156615, 0.121148, 0.592739, 0.544641, 0.08991939805856093, 0.120565, 0.596422, 0.543611, 0.09323927983996355, 0.120092, 0.600104, 0.54253, 0.09668084005112393, 0.119738, 0.603785, 0.5414, 0.10025035860247569, 0.119512, 0.607464, 0.540218, 0.10395166606548457, 0.119423, 0.611141, 0.538982, 0.10778863175664893, 0.119483, 0.614817, 0.537692, 0.11176825709375532, 0.119699, 0.61849, 0.536347, 0.1158937414083578, 0.120081, 0.622161, 0.534946, 0.12017261258618328, 0.120638, 0.625828, 0.533488, 0.12460831053084429, 0.12138, 0.629492, 0.531973, 0.12920892918348773, 0.122312, 0.633153, 0.530398, 0.13397940562408206, 0.123444, 0.636809, 0.528763, 0.1389247268696151, 0.12478, 0.640461, 0.527068, 0.1440539167850145, 0.126326, 0.644107, 0.525311, 0.14937109886878894, 0.128087, 0.647749, 0.523491, 0.15488597553065922, 0.130067, 0.651384, 0.521608, 0.16060298033344214, 0.132268, 0.655014, 0.519661, 0.16653254525446934, 0.134692, 0.658636, 0.517649, 0.17268103351103914, 0.137339, 0.662252, 0.515571, 0.1790548726824026, 0.14021, 0.665859, 0.513427, 0.1856656932897928, 0.143303, 0.669459, 0.511215, 0.192518809955863, 0.146616, 0.67305, 0.508936, 0.19962672775279414, 0.150148, 0.676631, 0.506589, 0.20699516093350254, 0.153894, 0.680203, 0.504172, 0.21463755488251532, 0.157851, 0.683765, 0.501686, 0.22256211091207387, 0.162016, 0.687316, 0.499129, 0.23077711328812803, 0.166383, 0.690856, 0.496502, 0.23929755215351006, 0.170948, 0.694384, 0.493803, 0.24813027732613183, 0.175707, 0.6979, 0.491033, 0.25729140612475787, 0.180653, 0.701402, 0.488189, 0.26678830343576565, 0.185783, 0.704891, 0.485273, 0.27663829851125377, 0.19109, 0.708366, 0.482284, 0.2868519617151331, 0.196571, 0.711827, 0.479221, 0.2974399703272395, 0.202219, 0.715272, 0.476084, 0.3084216445807435, 0.20803, 0.718701, 0.472873, 0.31980581294917815, 0.214, 0.722114, 0.469588, 0.33161324844051865, 0.220124, 0.725509, 0.466226, 0.3438534433807346, 0.226397, 0.728888, 0.462789, 0.35654873279324606, 0.232815, 0.732247, 0.459277, 0.3697127404238523, 0.239374, 0.735588, 0.455688, 0.38335922781828274, 0.24607, 0.73891, 0.452024, 0.39751309610082564, 0.252899, 0.742211, 0.448284, 0.41218572396007047, 0.259857, 0.745492, 0.444467, 0.4274038849472921, 0.266941, 0.748751, 0.440573, 0.44317981336560136, 0.274149, 0.751988, 0.436601, 0.45954229598942437, 0.281477, 0.755203, 0.432552, 0.47650448707388043, 0.288921, 0.758394, 0.428426, 0.4940973379998044, 0.296479, 0.761561, 0.424223, 0.5123397282524254, 0.304148, 0.764704, 0.419943, 0.5312507282770578, 0.311925, 0.767822, 0.415586, 0.5508648455002981, 0.319809, 0.770914, 0.411152, 0.5711978482568065, 0.327796, 0.77398, 0.40664, 0.5922868387410299, 0.335885, 0.777018, 0.402049, 0.6141487709792856, 0.344074, 0.780029, 0.397381, 0.6368235370460811, 0.35236, 0.783011, 0.392636, 0.6603354700022016, 0.360741, 0.785964, 0.387814, 0.6847091490297331, 0.369214, 0.788888, 0.382914, 0.7099890494572584, 0.377779, 0.791781, 0.377939, 0.7361954945002238, 0.386433, 0.794644, 0.372886, 0.7633763037862266, 0.395174, 0.797475, 0.367757, 0.7915533287242414, 0.404001, 0.800275, 0.362552, 0.8207779847136952, 0.412913, 0.803041, 0.357269, 0.8510816337244764, 0.421908, 0.805774, 0.35191, 0.8824959549429904, 0.430983, 0.808473, 0.346476, 0.91507827095303, 0.440137, 0.811138, 0.340967, 0.9488547755851436, 0.449368, 0.813768, 0.335384, 0.9838871017647558, 0.458674, 0.816363, 0.329727, 1.0202034129537667, 0.468053, 0.818921, 0.323998, 1.05786997653312, 0.477504, 0.821444, 0.318195, 1.0969272137701598, 0.487026, 0.823929, 0.312321, 1.137415954780709, 0.496615, 0.826376, 0.306377, 1.179410080494203, 0.506271, 0.828786, 0.300362, 1.222943351156925, 0.515992, 0.831158, 0.294279, 1.2680952031360617, 0.525776, 0.833491, 0.288127, 1.3149019352619111, 0.535621, 0.835785, 0.281908, 1.3634489570776498, 0.545524, 0.838039, 0.275626, 1.4137883660395119, 0.555484, 0.840254, 0.269281, 1.4659727865532084, 0.565498, 0.84243, 0.262877, 1.5200974409791677, 0.575563, 0.844566, 0.256415, 1.5762058416332712, 0.585678, 0.846661, 0.249897, 1.6344003710714086, 0.595839, 0.848717, 0.243329, 1.6947278134952406, 0.606045, 0.850733, 0.236712, 1.7572982500632761, 0.616293, 0.852709, 0.230052, 1.8221788272339121, 0.626579, 0.854645, 0.223353, 1.8894373706309715, 0.636902, 0.856542, 0.21662, 1.9591966087852777, 0.647257, 0.8584, 0.209861, 2.0315126230896476, 0.657642, 0.860219, 0.203082, 2.1065173705824214, 0.668054, 0.861999, 0.196293, 2.184271149667351, 0.678489, 0.863742, 0.189503, 2.2649158398230984, 0.688944, 0.865448, 0.182725, 2.3485379836028164, 0.699415, 0.867117, 0.175971, 2.4352249989105186, 0.709898, 0.868751, 0.169257, 2.525135065948932, 0.720391, 0.87035, 0.162603, 2.618340465922979, 0.730889, 0.871916, 0.156029, 2.715011273312788, 0.741388, 0.873449, 0.149561, 2.8152252044705874, 0.751884, 0.874951, 0.143228, 2.91916512253788, 0.762373, 0.876424, 0.137064, 3.026914587707252, 0.772852, 0.877868, 0.131109, 3.13867021341825, 0.783315, 0.879285, 0.125405, 3.2545519284245255, 0.79376, 0.880678, 0.120005, 3.3746808745215615, 0.804182, 0.882046, 0.114965, 3.499276254331321, 0.814576, 0.883393, 0.110347, 3.6284382335469005, 0.82494, 0.88472, 0.106217, 3.7624024976165025, 0.83527, 0.886029, 0.102646, 3.9012767441399925, 0.845561, 0.887322, 0.099702, 4.0453143808092715, 0.85581, 0.888601, 0.097452, 4.194669979299243, 0.866013, 0.889868, 0.095953, 4.349499674728937, 0.876168, 0.891125, 0.09525, 4.510085989140703, 0.886271, 0.892374, 0.095374, 4.6765580223415135, 0.89632, 0.893616, 0.096335, 4.8492195404705845, 0.906311, 0.894855, 0.098125, 5.028209350927185, 0.916242, 0.896091, 0.100717, 5.213854061386094, 0.926106, 0.89733, 0.104071, 5.406352893484751, 0.935904, 0.89857, 0.108131, 5.605907083925141, 0.945636, 0.899815, 0.112838, 5.8128807647769385, 0.9553, 0.901065, 0.118128, 6.027440327941875, 0.964894, 0.902323, 0.123941, 6.24997728620969, 0.974417, 0.90359, 0.130215, 6.480670543233927, 0.983868, 0.904867, 0.136897, 6.71994105140328, 0.993248, 0.906157, 0.143936]
ndensLUT.UseLogScale = 1
ndensLUT.NanColor = [1.0, 0.0, 0.0]
ndensLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
slice7Display.Representation = 'Surface'
slice7Display.ColorArrayName = ['CELLS', 'ndens']
slice7Display.LookupTable = ndensLUT
slice7Display.SelectTCoordArray = 'None'
slice7Display.SelectNormalArray = 'None'
slice7Display.SelectTangentArray = 'None'
slice7Display.OSPRayScaleFunction = 'PiecewiseFunction'
slice7Display.SelectOrientationVectors = 'None'
slice7Display.ScaleFactor = 30.02416458129883
slice7Display.SelectScaleArray = 'None'
slice7Display.GlyphType = 'Arrow'
slice7Display.GlyphTableIndexArray = 'None'
slice7Display.GaussianRadius = 1.5012082290649413
slice7Display.SetScaleArray = ['POINTS', '']
slice7Display.ScaleTransferFunction = 'PiecewiseFunction'
slice7Display.OpacityArray = ['POINTS', '']
slice7Display.OpacityTransferFunction = 'PiecewiseFunction'
slice7Display.DataAxesGrid = 'GridAxesRepresentation'
slice7Display.PolarAxes = 'PolarAxesRepresentation'
slice7Display.SelectInputVectors = ['POINTS', '']
slice7Display.WriteLog = ''

# setup the color legend parameters for each legend in this view

# get color legend/bar for ndensLUT in view renderView1
ndensLUTColorBar = GetScalarBar(ndensLUT, renderView1)
ndensLUTColorBar.Orientation = 'Horizontal'
ndensLUTColorBar.WindowLocation = 'Any Location'
ndensLUTColorBar.Position = [0.10057641873077516, 0.9]
ndensLUTColorBar.Title = 'Number density ($cm^{-3}$)'
ndensLUTColorBar.ComponentTitle = ''
ndensLUTColorBar.TitleBold = 1
ndensLUTColorBar.TitleFontSize = 20
ndensLUTColorBar.LabelBold = 1
ndensLUTColorBar.LabelFontSize = 20
ndensLUTColorBar.ScalarBarThickness = 8
ndensLUTColorBar.ScalarBarLength = 0.8117150063051699
ndensLUTColorBar.AutomaticLabelFormat = 0
ndensLUTColorBar.LabelFormat = '%-#6.1e'

# set color bar visibility
ndensLUTColorBar.Visibility = 1

# get color legend/bar for tr1LUT in view renderView1
tr1LUTColorBar = GetScalarBar(tr1LUT, renderView1)
tr1LUTColorBar.Orientation = 'Horizontal'
tr1LUTColorBar.WindowLocation = 'Any Location'
tr1LUTColorBar.Position = [0.10047044324558585, 0.35]
tr1LUTColorBar.Title = 'Passive scalar'
tr1LUTColorBar.ComponentTitle = ''
tr1LUTColorBar.TitleBold = 1
tr1LUTColorBar.TitleFontSize = 20
tr1LUTColorBar.LabelBold = 1
tr1LUTColorBar.LabelFontSize = 20
tr1LUTColorBar.ScalarBarThickness = 8
tr1LUTColorBar.ScalarBarLength = 0.8117150063051708
tr1LUTColorBar.AutomaticLabelFormat = 0
tr1LUTColorBar.LabelFormat = '%-#6.2f'
tr1LUTColorBar.RangeLabelFormat = '%-#6.2f'

# set color bar visibility
tr1LUTColorBar.Visibility = 1

# get color legend/bar for temperatureLUT in view renderView1
temperatureLUTColorBar = GetScalarBar(temperatureLUT, renderView1)
temperatureLUTColorBar.Orientation = 'Horizontal'
temperatureLUTColorBar.WindowLocation = 'Any Location'
temperatureLUTColorBar.Position = [0.09989648536825729, 0.73]
temperatureLUTColorBar.Title = 'Temperature (K)'
temperatureLUTColorBar.ComponentTitle = ''
temperatureLUTColorBar.TitleBold = 1
temperatureLUTColorBar.TitleFontSize = 20
temperatureLUTColorBar.LabelBold = 1
temperatureLUTColorBar.LabelFontSize = 20
temperatureLUTColorBar.ScalarBarThickness = 8
temperatureLUTColorBar.ScalarBarLength = 0.8117150063051701
temperatureLUTColorBar.AutomaticLabelFormat = 0
temperatureLUTColorBar.LabelFormat = '%-#6.1e'

# set color bar visibility
temperatureLUTColorBar.Visibility = 1

# get color legend/bar for pkBLUT in view renderView1
pkBLUTColorBar = GetScalarBar(pkBLUT, renderView1)
pkBLUTColorBar.Orientation = 'Horizontal'
pkBLUTColorBar.WindowLocation = 'Any Location'
pkBLUTColorBar.Position = [0.10051802130453796, 0.54]
pkBLUTColorBar.Title = '$\\bf{p/k_B}$ ($K cm^{-3}$)'
pkBLUTColorBar.ComponentTitle = ''
pkBLUTColorBar.TitleBold = 1
pkBLUTColorBar.TitleFontSize = 20
pkBLUTColorBar.LabelBold = 1
pkBLUTColorBar.LabelFontSize = 20
pkBLUTColorBar.ScalarBarThickness = 8
pkBLUTColorBar.ScalarBarLength = 0.8117150063051708
pkBLUTColorBar.AutomaticLabelFormat = 0
pkBLUTColorBar.LabelFormat = '%-#6.1e'

# set color bar visibility
pkBLUTColorBar.Visibility = 1

# get color legend/bar for machLUT in view renderView1
machLUTColorBar = GetScalarBar(machLUT, renderView1)
machLUTColorBar.Orientation = 'Horizontal'
machLUTColorBar.WindowLocation = 'Any Location'
machLUTColorBar.Position = [0.10097037793666996, 0.18]
machLUTColorBar.Title = 'Mach'
machLUTColorBar.ComponentTitle = ''
machLUTColorBar.TitleBold = 1
machLUTColorBar.TitleFontSize = 20
machLUTColorBar.LabelBold = 1
machLUTColorBar.LabelFontSize = 20
machLUTColorBar.ScalarBarThickness = 8
machLUTColorBar.ScalarBarLength = 0.8117150063051708
machLUTColorBar.AutomaticLabelFormat = 0
machLUTColorBar.LabelFormat = '%-#6.2f'
machLUTColorBar.RangeLabelFormat = '%-#6.2f'

# set color bar visibility
machLUTColorBar.Visibility = 1

# show color legend
slice2Display.SetScalarBarVisibility(renderView1, True)

# show color legend
slice4Display.SetScalarBarVisibility(renderView1, True)

# show color legend
slice5Display.SetScalarBarVisibility(renderView1, True)

# show color legend
slice6Display.SetScalarBarVisibility(renderView1, True)

# show color legend
slice7Display.SetScalarBarVisibility(renderView1, True)

# ----------------------------------------------------------------
# setup color maps and opacity mapes used in the visualization
# note: the Get..() functions create a new object, if needed
# ----------------------------------------------------------------

# get opacity transfer function/opacity map for 'tr1'
tr1PWF = GetOpacityTransferFunction('tr1')
tr1PWF.ScalarRangeInitialized = 1

# get opacity transfer function/opacity map for 'mach'
machPWF = GetOpacityTransferFunction('mach')
machPWF.Points = [0.0, 0.0, 0.5, 0.0, 11.314144458578802, 1.0, 0.5, 0.0]
machPWF.ScalarRangeInitialized = 1

# get opacity transfer function/opacity map for 'temperature'
temperaturePWF = GetOpacityTransferFunction('temperature')
temperaturePWF.Points = [38227.92140518561, 0.0, 0.5, 0.0, 5509051.116394527, 1.0, 0.5, 0.0]
temperaturePWF.ScalarRangeInitialized = 1

# get opacity transfer function/opacity map for 'pkB'
pkBPWF = GetOpacityTransferFunction('pkB')
pkBPWF.Points = [123.77585621759172, 0.0, 0.5, 0.0, 556523.5704174562, 1.0, 0.5, 0.0]
pkBPWF.ScalarRangeInitialized = 1

# get opacity transfer function/opacity map for 'ndens'
ndensPWF = GetOpacityTransferFunction('ndens')
ndensPWF.Points = [0.000649680159978279, 0.0, 0.5, 0.0, 6.719941051403277, 1.0, 0.5, 0.0]
ndensPWF.ScalarRangeInitialized = 1

# ----------------------------------------------------------------
# setup extractors
# ----------------------------------------------------------------

# create extractor
pNG1 = CreateExtractor('PNG', renderView1, registrationName='PNG1')
# trace defaults for the extractor.
pNG1.Trigger = 'TimeValue'

# init the 'TimeValue' selected for 'Trigger'
pNG1.Trigger.Length = 0.1

# init the 'PNG' selected for 'Writer'
pNG1.Writer.FileName = 'AllFields_{timestep:06d}{camera}.png'
pNG1.Writer.ImageResolution = [1540, 794]
pNG1.Writer.FontScaling = 'Do not scale fonts'
pNG1.Writer.OverrideColorPalette = 'BlackBackground'
pNG1.Writer.Format = 'PNG'

# init the 'PNG' selected for 'Format'
pNG1.Writer.Format.CompressionLevel = '0'

# ----------------------------------------------------------------
# restore active source
SetActiveSource(pNG1)
# ----------------------------------------------------------------

# ------------------------------------------------------------------------------
# Catalyst options
from paraview import catalyst
options = catalyst.Options()
options.ExtractsOutputDirectory = 'output/catalyst/'
options.GlobalTrigger = 'TimeStep'
options.EnableCatalystLive = 1
options.CatalystLiveTrigger = 'TimeStep'

# init the 'TimeStep' selected for 'GlobalTrigger'
options.GlobalTrigger.Frequency = 10

# ------------------------------------------------------------------------------
if __name__ == '__main__':
    from paraview.simple import SaveExtractsUsingCatalystOptions
    # Code for non in-situ environments; if executing in post-processing
    # i.e. non-Catalyst mode, let's generate extracts using Catalyst options
    SaveExtractsUsingCatalystOptions(options)
